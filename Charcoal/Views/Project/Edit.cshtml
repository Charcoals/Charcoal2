@using Newtonsoft.Json
@using ServiceStack.Text
@model Charcoal.Models.ProjectEditModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/DashboardLayout.cshtml";
}
<div id="projectEdit">
    @using (Html.BeginForm("Edit", "Project"))
    {
        @Html.ValidationSummary(true)
   
   
        <fieldset>
            <legend>ProjectEditModel</legend>
            @Html.HiddenFor(model => model.Id)
            <div class="control-group">
                <div class="control-label">
                    @Html.LabelFor(model => model.Title)
                </div>
                <div class="controls">
                    @Html.EditorFor(model => model.Title)
                    @Html.ValidationMessageFor(model => model.Title)
                </div>
            </div>
            <div class="control-group">
                <div class="control-label">
                    @Html.LabelFor(model => model.Description)
                </div>
                <div class="controls">
                    @Html.EditorFor(model => model.Description)
                    @Html.ValidationMessageFor(model => model.Description)
                </div>
            </div>
            Current
            <ul data-bind="foreach: currentMembers">
                <li ><span data-bind="text: UserName"></span>
                    <button data-bind="click: $parent.removeMember">
                        Remove</button>
                </li>
            </ul>
            Available
            <ul data-bind="foreach: availableMembers">
                <li><span data-bind="text: UserName"></span>
                    <button data-bind="click: $parent.addMember">
                        Add</button>
                </li>
            </ul>
            <p>
                <input type="submit" value="Save" />
            </p>
        </fieldset>
    }
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
<script type="text/javascript">

    function ProjectViewModel() {
        this.availableMembers =ko.observableArray(@Html.Raw(JsonConvert.SerializeObject(Model.AvailableMembers)));
        this.currentMembers = ko.observableArray(@Html.Raw(JsonConvert.SerializeObject(Model.Members)));
        //this.title = ko.observable(@Model.Title);
       // this.description = ko.observable(@Model.Description);
     

        this.addMember = function(member) {
        $.ajax({
                    url: "/Project/AddUserToProject",
                    type: "POST",
                    data: 'projectId=' +  @Model.Id + '&userId=' + member.Id ,
                    success: function(data) {
                        //alert(data);
                        this.availableMembers().push(member);
                        this.currentMembers().remove(member);
                    },
                    error: function(xhr, textStatus, error) {
                        alert('ajax:failure', [xhr, status, error]);
                    }
                });
        };
        
        this.removeMember = function(member) {
         $.ajax({
                    url: "/Project/RemoveUserFromProject",
                    type: "POST",
                    data: 'projectId=' +  @Model.Id + '&userId=' + member.Id ,
                    success: function(data) {
                        //alert(data);
                        this.availableMembers().remove(member);
                        this.currentMembers().push(member);
                    },
                    error: function(xhr, textStatus, error) {
                        alert('ajax:failure', [xhr, status, error]);
                    }
                });
        };
        
    }

     ko.applyBindings(new ProjectViewModel(), document.getElementById("projectEdit"));

</script>
